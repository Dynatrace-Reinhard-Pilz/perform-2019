server.port=8080
management.server.port=${server.port}
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
#spring.datasource.initialize=true

spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=jdbc:derby:memory:example1;create=true;user=test1;password=pass1
spring.datasource.jdbcUrl=jdbc:derby:memory:example1;create=true;user=test1;password=pass1
spring.datasource.username=test1
spring.datasource.password=pass1
spring.datasource.driver-class-name=org.apache.derby.jdbc.EmbeddedDriver

# Hikari will use the above plus the following to setup connection pooling
spring.datasource.minimumIdle=5
spring.datasource.maximumPoolSize=100
spring.datasource.idleTimeout=30000
spring.datasource.poolName=pool-a
spring.datasource.maxLifetime=2000000
spring.datasource.connectionTimeout=5000

spring.datasource2.type=com.zaxxer.hikari.HikariDataSource
spring.datasource2.url=jdbc:derby:memory:example1;create=true;user=test1;password=pass1
spring.datasource2.jdbcUrl=jdbc:derby:memory:example1;create=true;user=test1;password=pass1
spring.datasource2.username=test1
spring.datasource2.password=pass1
spring.datasource2.driver-class-name=org.apache.derby.jdbc.EmbeddedDriver
spring.datasource2.maximumPoolSize=100

# Hikari will use the above plus the following to setup connection pooling
spring.datasource2.minimumIdle=5
spring.datasource2.maximumPoolSize=100
spring.datasource2.idleTimeout=30000
spring.datasource2.poolName=pool-b
spring.datasource2.maxLifetime=2000000
spring.datasource2.connectionTimeout=5000

spring.datasource3.type=com.zaxxer.hikari.HikariDataSource
spring.datasource3.url=jdbc:derby:memory:example1;create=true;user=test1;password=pass1
spring.datasource3.jdbcUrl=jdbc:derby:memory:example1;create=true;user=test1;password=pass1
spring.datasource3.username=test1
spring.datasource3.password=pass1
spring.datasource3.driver-class-name=org.apache.derby.jdbc.EmbeddedDriver
spring.datasource3.maximumPoolSize=100

# Hikari will use the above plus the following to setup connection pooling
spring.datasource3.minimumIdle=5
spring.datasource3.maximumPoolSize=100
spring.datasource3.idleTimeout=30000
spring.datasource3.poolName=pool-c
spring.datasource3.maxLifetime=2000000
spring.datasource3.connectionTimeout=5000

# Without below HikariCP uses deprecated com.zaxxer.hikari.hibernate.HikariConnectionProvider
# Surprisingly enough below ConnectionProvider is in hibernate-hikaricp dependency and not hibernate-core
# So you need to pull that dependency but, make sure to exclude it's transitive dependencies or you will end up 
# with different versions of hibernate-core 
spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider

# JPA specific configs
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql=true
spring.jpa.properties.hibernate.id.new_generator_mappings=false
spring.jpa.properties.hibernate.default_schema=dbschema
spring.jpa.properties.hibernate.search.autoregister_listeners=false
spring.jpa.properties.hibernate.bytecode.use_reflection_optimizer=false

# Enable logging to verify that HikariCP is used, the second entry is specific to HikariCP
logging.level.org.hibernate.SQL=WARN
logging.level.com.zaxxer.hikari.HikariConfig=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN 
